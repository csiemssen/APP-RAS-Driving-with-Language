name: Publish Docker image

on: push

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: DockerHub # üëà this gives the job access to that env's secrets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check secrets availability and length of secrets
        run: |
          echo "Checking if required secrets are set and not empty..."

          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ] || [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "Required secrets are not set or empty"
            exit 1
          fi

          echo "Secrets are set"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: get_tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Check if Docker image version already exists
        id: check_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          IMAGE=caspar00/app-ras-25
          EXISTS=$(curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com/v2/repositories/${IMAGE}/tags/${VERSION}/)
          if [ "$EXISTS" -eq 200 ]; then
            echo "Image version ${VERSION} already exists. Skipping."
            echo "skip=true" >> $GITHUB_OUTPUT
          elif [ "$EXISTS" -eq 404 ]; then
              echo "Image version ${VERSION} does not exist. Proceeding."
              echo "skip=false" >> $GITHUB_OUTPUT
          else
              echo "Failed to check image version. HTTP status: $EXISTS"
              exit 1
          fi

      - name: Build and push Docker image
        if: steps.check_version.outputs.skip != 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            - ${{ secrets.DOCKERHUB_USERNAME }}/app-ras-25:latest
            - ${{ secrets.DOCKERHUB_USERNAME }}/app-ras-25:${{ env.VERSION }}

      - name: Generate automatic changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## üê≥ Docker Image

            ```
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app-ras-25:${{ github.ref_name }}
            ```

            ## üìã Changelog

            ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
